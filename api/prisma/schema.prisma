// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id           Int            @id @default(autoincrement())
  nome         String
  email        String         @unique
  senha        String
  criadoEm     DateTime       @default(now())
  avatarurl    String?
  sessoes      SessaoEstudo[]
  mensagens    Mensagem[]
  role        String         @default("usuario") // pode ser "admin" ou "usuario"
  medalhas     UsuarioMedalha[]
  respostas    Resposta[]

}

model SessaoEstudo {
  id         Int      @id @default(autoincrement())
  usuarioId  Int
  topico     String
  duracao    Int      // em minutos
  data       DateTime  @default(now())

  usuario    Usuario   @relation(fields: [usuarioId], references: [id])
}

model Medalha {
  id        Int               @id @default(autoincrement())
  titulo    String
  descricao String
  usuarios  UsuarioMedalha[]
}

model UsuarioMedalha {
  id         Int      @id @default(autoincrement())
  usuarioId  Int
  medalhaId  Int
  data       DateTime @default(now())

  usuario    Usuario  @relation(fields: [usuarioId], references: [id])
  medalha    Medalha  @relation(fields: [medalhaId], references: [id])

  @@unique([usuarioId, medalhaId])
}

model Mensagem {
  id         Int      @id @default(autoincrement())
  usuarioId  Int
  texto      String
  resposta   String?
  enviadaEm  DateTime @default(now())

  usuario    Usuario?  @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
}

model Resposta {
  id         Int       @id @default(autoincrement())
  usuarioId  Int?      
  questaoId  Int
  correta    Boolean
  createdAt  DateTime  @default(now())

  usuario    Usuario?  @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
}

